// Generated by CoffeeScript 1.7.1
(function() {
  app.service('OvertimeManagement', function($http) {
    this.retrieveApplications = function() {
      return $http.get(dbServer + '/retrieveOvertimeList', {
        params: {
          user: $.cookie("user")
        }
      }).success(function(data, status, headers, config) {
        return data;
      }).error(function(data, status, headers, config) {});
    };
    this.retrieveApplicationById = function(ApplicationId) {
      return $http.get(dbServer + '/retrieveOvertimeId', {
        params: {
          ApplicationId: ApplicationId
        }
      }).success(function(data, status, headers, config) {
        return data;
      }).error(function(data, status, headers, config) {});
    };
    this.retrieveApplicationsForUser = function(ApplicationId) {
      return $http.get(dbServer + '/retrieveOvertimeApplicationsForUser', {
        params: {
          ApplicationId: ApplicationId
        }
      }).success(function(data, status, headers, config) {
        return data;
      }).error(function(data, status, headers, config) {});
    };
    this.OvertimeApplicationAction = function(application, action) {
      return $http.post(dbServer + '/overtimeApplicationAction', {
        params: {
          application: application,
          action: action
        }
      }).success(function(data, status, headers, config) {
        return data;
      }).error(function(data, status, headers, config) {});
    };
  });

  app.controller('OvertimeCtrl', function($scope, OvertimeManagement, $filter, ngTableParams) {
    OvertimeManagement.retrieveApplications().then(function(data) {
      data = data.data;
      $scope.dataTableHrManageOvertime = new ngTableParams({
        page: 1,
        count: 10,
        sorting: {
          applicationDate: 'asc'
        }
      }, {
        total: data.length,
        getData: function($defer, params) {
          var filteredData, orderedData;
          filteredData = (params.filter() ? $filter("filter")(data, params.filter()) : data);
          orderedData = (params.sorting() ? $filter("orderBy")(filteredData, params.orderBy()) : data);
          params.total(orderedData.length);
          $defer.resolve(orderedData.slice((params.page() - 1) * params.count(), params.page() * params.count()));
        }
      });
    });
  });

  app.controller('OvertimeEmpCtrl', function($scope, $stateParams, OvertimeManagement, $filter, ngTableParams, $window) {
    $scope.application = {};
    OvertimeManagement.retrieveApplicationById($stateParams.ApplicationID).then(function(data) {
      return $scope.application = {
        from: data.data.from,
        to: data.data.to,
        empID: data.data.empId,
        date: data.data.date,
        applicationID: data.data.applicationID,
        reason: data.data.reason,
        applicationDate: data.data.applicationDate
      };
    });
    OvertimeManagement.retrieveApplicationsForUser($stateParams.ApplicationID).then(function(data) {
      data = data.data;
      $scope.dataTableHrOvertimeEmp = new ngTableParams({
        page: 1,
        count: 10
      }, {
        total: data.length,
        getData: function($defer, params) {
          var filteredData, orderedData;
          filteredData = (params.filter() ? $filter("filter")(data, params.filter()) : data);
          orderedData = (params.sorting() ? $filter("orderBy")(filteredData, params.orderBy()) : data);
          params.total(orderedData.length);
          $defer.resolve(orderedData.slice((params.page() - 1) * params.count(), params.page() * params.count()));
        }
      });
    });
    $scope.Action = function(action) {
      return OvertimeManagement.OvertimeApplicationAction($scope.application, action).then(function(data) {
        if (data.data.result) {
          return $window.location = '#/hrOvertime';
        }
      });
    };
  });

}).call(this);

//# sourceMappingURL=overtime.map
