// Generated by CoffeeScript 1.7.1
(function() {
  app.service('LoanManagement', function($http) {
    this.retrieveApplications = function() {
      return $http.get(dbServer + '/retrieveLoanList', {
        params: {
          user: $.cookie("user")
        }
      }).success(function(data, status, headers, config) {
        return data;
      }).error(function(data, status, headers, config) {});
    };
    this.retrieveApplicationById = function(ApplicationId) {
      return $http.get(dbServer + '/retrieveLoanId', {
        params: {
          ApplicationId: ApplicationId
        }
      }).success(function(data, status, headers, config) {
        return data;
      }).error(function(data, status, headers, config) {});
    };
    this.retrieveApplicationsForUser = function(ApplicationId) {
      return $http.get(dbServer + '/retrieveLoanApplicationsForUser', {
        params: {
          ApplicationId: ApplicationId
        }
      }).success(function(data, status, headers, config) {
        return data;
      }).error(function(data, status, headers, config) {});
    };
    this.LoanApplicationAction = function(application, action) {
      return $http.post(dbServer + '/loanApplicationAction', {
        params: {
          application: application,
          action: action
        }
      }).success(function(data, status, headers, config) {
        return data;
      }).error(function(data, status, headers, config) {});
    };
  });

  app.controller('LoanCtrl', function($scope, LoanManagement, $filter, ngTableParams) {
    LoanManagement.retrieveApplications().then(function(data) {
      data = data.data;
      $scope.dataTableHrManageLoan = new ngTableParams({
        page: 1,
        count: 10,
        sorting: {
          applicationDate: 'asc'
        }
      }, {
        total: data.length,
        getData: function($defer, params) {
          var filteredData, orderedData;
          filteredData = (params.filter() ? $filter("filter")(data, params.filter()) : data);
          orderedData = (params.sorting() ? $filter("orderBy")(filteredData, params.orderBy()) : data);
          params.total(orderedData.length);
          $defer.resolve(orderedData.slice((params.page() - 1) * params.count(), params.page() * params.count()));
        }
      });
    });
  });

  app.controller('LoanEmpCtrl', function($scope, $stateParams, LoanManagement, $filter, ngTableParams, $window) {
    $scope.application = {};
    LoanManagement.retrieveApplicationById($stateParams.ApplicationID).then(function(data) {
      console.log(data.data);
      $scope.application = {
        amount: data.data.amount,
        loanType: data.data.loanType,
        empID: data.data.empId,
        applicationDate: data.data.applicationDate,
        applicationID: data.data.applicationID,
        rateOfInterest: data.data.rateOfInterest,
        duration: data.data.duration
      };
      return console.log($scope.application);
    });
    LoanManagement.retrieveApplicationsForUser($stateParams.ApplicationID).then(function(data) {
      data = data.data;
      $scope.dataTableHrLoanEmp = new ngTableParams({
        page: 1,
        count: 10
      }, {
        total: data.length,
        getData: function($defer, params) {
          var filteredData, orderedData;
          filteredData = (params.filter() ? $filter("filter")(data, params.filter()) : data);
          orderedData = (params.sorting() ? $filter("orderBy")(filteredData, params.orderBy()) : data);
          params.total(orderedData.length);
          $defer.resolve(orderedData.slice((params.page() - 1) * params.count(), params.page() * params.count()));
        }
      });
    });
    $scope.Action = function(action) {
      return LoanManagement.LoanApplicationAction($scope.application, action).then(function(data) {
        if (data.data.result) {
          return $window.location = '#/hrLoan';
        }
      });
    };
  });

}).call(this);

//# sourceMappingURL=loan.map
