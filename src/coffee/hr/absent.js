// Generated by CoffeeScript 1.6.3
app.service('AbsentManagement', function($http) {
  this.retrieveApplications = function() {
    return $http.get(dbServer + '/retrieveAbsentList', {
      params: {
        user: $.cookie("user")
      }
    }).success(function(data, status, headers, config) {
      return data;
    }).error(function(data, status, headers, config) {});
  };
  this.retrieveApplicationById = function(ApplicationId) {
    return $http.get(dbServer + '/retrieveAbsentId', {
      params: {
        ApplicationId: ApplicationId
      }
    }).success(function(data, status, headers, config) {
      return data;
    }).error(function(data, status, headers, config) {});
  };
  this.retrieveApplicationsForUser = function(ApplicationId) {
    return $http.get(dbServer + '/retrieveAbsentApplicationsForUser', {
      params: {
        ApplicationId: ApplicationId
      }
    }).success(function(data, status, headers, config) {
      return data;
    }).error(function(data, status, headers, config) {});
  };
  this.AbsentApplicationAction = function(application, action) {
    return $http.post(dbServer + '/absentApplicationAction', {
      params: {
        application: application,
        action: action
      }
    }).success(function(data, status, headers, config) {
      return data;
    }).error(function(data, status, headers, config) {});
  };
});

app.controller('AbsentCtrl', function($scope, AbsentManagement, $filter, ngTableParams) {
  AbsentManagement.retrieveApplications().then(function(data) {
    data = data.data;
    $scope.dataTableHrManageAbsent = new ngTableParams({
      page: 1,
      count: 10,
      sorting: {
        applicationDate: 'asc'
      }
    }, {
      total: data.length,
      getData: function($defer, params) {
        var filteredData, orderedData;
        filteredData = (params.filter() ? $filter("filter")(data, params.filter()) : data);
        orderedData = (params.sorting() ? $filter("orderBy")(filteredData, params.orderBy()) : data);
        params.total(orderedData.length);
        $defer.resolve(orderedData.slice((params.page() - 1) * params.count(), params.page() * params.count()));
      }
    });
  });
});

app.controller('AbsentEmpCtrl', function($scope, $stateParams, AbsentManagement, $filter, ngTableParams, $window) {
  $scope.application = {};
  AbsentManagement.retrieveApplicationById($stateParams.ApplicationID).then(function(data) {
    return $scope.application = {
      fromDate: data.data.from,
      toDate: data.data.to,
      absentType: data.data.absentType,
      empID: data.data.empId,
      applicationDate: data.data.applicationDate,
      applicationID: data.data.applicationID
    };
  });
  AbsentManagement.retrieveApplicationsForUser($stateParams.ApplicationID).then(function(data) {
    data = data.data;
    $scope.dataTableHrAbsentEmp = new ngTableParams({
      page: 1,
      count: 10
    }, {
      total: data.length,
      getData: function($defer, params) {
        var filteredData, orderedData;
        filteredData = (params.filter() ? $filter("filter")(data, params.filter()) : data);
        orderedData = (params.sorting() ? $filter("orderBy")(filteredData, params.orderBy()) : data);
        params.total(orderedData.length);
        $defer.resolve(orderedData.slice((params.page() - 1) * params.count(), params.page() * params.count()));
      }
    });
  });
  $scope.Action = function(action) {
    return AbsentManagement.AbsentApplicationAction($scope.application, action).then(function(data) {
      if (data.data.result) {
        return $window.location = '#/hrAbsent';
      }
    });
  };
});

app.controller('substituteEmployeeCtrl', function($scope, AbsentManagement, userService, $filter, $window) {
  var absentData;
  $scope.sub = {};
  absentData = {};
  AbsentManagement.retrieveApplications().then(function(data) {
    absentData = data.data.LeavesList;
    $scope.absentIds = data.data.LeavesList;
    console.log(data.data);
    return $scope.subEmpIds = data.data.users;
  });
  return $scope.changeAbsentId = function() {
    return _.each(absentData, function(data) {
      if (($scope.sub.absentId !== null || $scope.sub.absentId !== void 0) && data.applicationID === $scope.sub.absentId) {
        $scope.sub.empId = data.empId;
      }
      if ($scope.sub.absentId === null || $scope.sub.absentId === void 0) {
        return $scope.sub.empId = '';
      }
    });
  };
});

/*
//@ sourceMappingURL=absent.map
*/
