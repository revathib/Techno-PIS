// Generated by CoffeeScript 1.7.1
app.service('LeaveManagement', function($http) {
  this.retrieveApplications = function() {
    return $http.get(dbServer + '/retrieveEmpLeavesList', {
      params: {
        user: $.cookie("user")
      }
    }).success(function(data, status, headers, config) {
      return data;
    }).error(function(data, status, headers, config) {});
  };
  this.retrieveApplicationById = function(ApplicationId) {
    return $http.get(dbServer + '/retrieveLeaveId', {
      params: {
        ApplicationId: ApplicationId
      }
    }).success(function(data, status, headers, config) {
      return data;
    }).error(function(data, status, headers, config) {});
  };
  this.retrieveApplicationsForUser = function(ApplicationId) {
    return $http.get(dbServer + '/retrieveLeaveApplicationsForUser', {
      params: {
        ApplicationId: ApplicationId
      }
    }).success(function(data, status, headers, config) {
      return data;
    }).error(function(data, status, headers, config) {});
  };
  this.LeaveApplicationAction = function(application, action) {
    return $http.post(dbServer + '/leaveApplicationAction', {
      params: {
        application: application,
        action: action
      }
    }).success(function(data, status, headers, config) {
      return data;
    }).error(function(data, status, headers, config) {});
  };
});

app.controller('LeaveCtrl', function($scope, LeaveManagement, $filter, ngTableParams) {
  LeaveManagement.retrieveApplications().then(function(data) {
    data = data.data;
    $scope.dataTableHrManageLeave = new ngTableParams({
      page: 1,
      count: 10,
      sorting: {
        applicationDate: 'asc'
      }
    }, {
      total: data.length,
      getData: function($defer, params) {
        var filteredData, orderedData;
        filteredData = (params.filter() ? $filter("filter")(data, params.filter()) : data);
        orderedData = (params.sorting() ? $filter("orderBy")(filteredData, params.orderBy()) : data);
        params.total(orderedData.length);
        $defer.resolve(orderedData.slice((params.page() - 1) * params.count(), params.page() * params.count()));
      }
    });
  });
});

app.controller('LeaveEmpCtrl', function($scope, $stateParams, LeaveManagement, $filter, ngTableParams, $window) {
  $scope.application = {};
  LeaveManagement.retrieveApplicationById($stateParams.ApplicationID).then(function(data) {
    return $scope.application = {
      fromDate: data.data.fromDate,
      toDate: data.data.toDate,
      leaveType: data.data.leaveType,
      empID: data.data.empId,
      applicationDate: data.data.applicationDate,
      applicationID: data.data.applicationID
    };
  });
  LeaveManagement.retrieveApplicationsForUser($stateParams.ApplicationID).then(function(data) {
    data = data.data;
    $scope.dataTableHrLeaveEmp = new ngTableParams({
      page: 1,
      count: 10
    }, {
      total: data.length,
      getData: function($defer, params) {
        var filteredData, orderedData;
        filteredData = (params.filter() ? $filter("filter")(data, params.filter()) : data);
        orderedData = (params.sorting() ? $filter("orderBy")(filteredData, params.orderBy()) : data);
        params.total(orderedData.length);
        $defer.resolve(orderedData.slice((params.page() - 1) * params.count(), params.page() * params.count()));
      }
    });
  });
  $scope.Action = function(action) {
    return LeaveManagement.LeaveApplicationAction($scope.application, action).then(function(data) {
      if (data.data.result) {
        return $window.location = '#/hrLeave';
      }
    });
  };
});

//# sourceMappingURL=leave.map
