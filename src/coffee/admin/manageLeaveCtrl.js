// Generated by CoffeeScript 1.7.1
(function() {
  app.service('leavesService', function($http) {
    this.createNewLeave = function(leaveCode, leaveType, leaveCategory, leaveCount, gender) {
      console.log(leaveCount);
      return $http.post(dbServer + '/addLeave', {
        params: {
          leaveCode: leaveCode,
          leaveType: leaveType,
          leaveCategory: leaveCategory,
          leaveCount: leaveCount,
          gender: gender
        }
      }).success(function(data, status, headers, config) {
        return data;
      }).error(function(data, status, headers, config) {});
    };
    this.updateAbsent = function(leaveId, leaveCode, leaveType, leaveCategory, leaveCount) {
      return $http.post(dbServer + '/updateLeave', {
        params: {
          leaveId: leaveId,
          leaveCode: leaveCode,
          leaveType: leaveType,
          leaveCategory: leaveCategory,
          leaveCount: leaveCount
        }
      }).success(function(data, status, headers, config) {
        return data;
      }).error(function(data, status, headers, config) {});
    };
    this.deleteAbsent = function(leaveId) {
      return $http.post(dbServer + '/deleteLeave', {
        params: {
          leaveId: leaveId
        }
      }).success(function(data, status, headers, config) {
        return data;
      }).error(function(data, status, headers, config) {});
    };
    this.createNewCategory = function(categoryCode, categoryName) {
      return $http.post(dbServer + '/addAbsentCategory', {
        params: {
          categoryCode: categoryCode,
          categoryName: categoryName
        }
      }).success(function(data, status, headers, config) {
        console.log("dataSaved Success");
        return data;
      }).error(function(data, status, headers, config) {
        return console.log("Data not Saved");
      });
    };
    this.retrieveLeaves = function() {
      console.log("leaves");
      return $http.get(dbServer + '/retrieveLeaveList').success(function(data, status, headers, config) {
        console.log(data);
        return data;
      }).error(function(data, status, headers, config) {});
    };
    this.retrieveLeaveById = function(leaveId) {
      return $http.get(dbServer + '/retrieveLeaveById', {
        params: {
          leaveId: leaveId
        }
      }).success(function(data, status, headers, config) {
        return data;
      }).error(function(data, status, headers, config) {});
    };
    this.editLeaveDetails = function(application, leaveId) {
      return $http.post(dbServer + 'editLeaves', {
        application: application,
        leaveId: leaveId
      }).success(function(data, status, headers, config) {
        return data;
      }).error(function(data, status, headers, config) {});
    };
    this.retrieveAbsentCategories = function() {
      console.log("categories");
      return $http.get(dbServer + '/retrieveAbsentCategories').success(function(data, status, headers, config) {
        console.log(data);
        return data;
      }).error(function(data, status, headers, config) {});
    };
  });

  app.controller('AbsentsCtrl', function($scope, leavesService, $filter, ngTableParams, $location, $stateParams, $window) {
    leavesService.retrieveLeaves().then(function(data) {
      data = data.data;
      $scope.leavesTable = new ngTableParams({
        page: 1,
        count: 5,
        sorting: {
          leaveCode: 'asc'
        }
      }, {
        total: data.length,
        getData: function($defer, params) {
          var filteredData, orderedData;
          filteredData = (params.filter() ? $filter("filter")(data, params.filter()) : data);
          orderedData = (params.sorting() ? $filter("orderBy")(filteredData, params.orderBy()) : data);
          params.total(orderedData.length);
          $defer.resolve(orderedData.slice((params.page() - 1) * params.count(), params.page() * params.count()));
        }
      });
    });
    $scope.createNew = function() {
      leavesService.createNewLeave($scope.absent.code, $scope.absent.type, $scope.absent.category, $scope.absent.count, $scope.absent.gender).then(function(data) {
        if (data.data.result) {
          console.log("saved data");
          $scope.absentAdded = true;
          return $window.location = '#/adminAbsents';
        }
      });
    };
    $scope.LeaveById = {};
    leavesService.retrieveLeaveById($stateParams.leaveId).then(function(data) {
      console.log("LeaveById");
      $scope.LeaveById = {
        leaveId: data.data.leaveId,
        leaveCode: data.data.leaveCode,
        leaveCategory: data.data.leaveCategory,
        leaveType: data.data.leaveType,
        leaveCount: data.data.leaveCount
      };
    });
    $scope.update = function(id) {
      leavesService.updateAbsent(id, $scope.LeaveById.leaveCode, $scope.LeaveById.leaveType, $scope.LeaveById.leaveCategory, $scope.LeaveById.leaveCount).then(function(data) {
        console.log("updating data");
        return $window.location = '#/adminAbsents';
      });
    };
    $scope["delete"] = function(id) {
      return leavesService.deleteAbsent(id).then(function(data) {
        console.log("deleting...");
        console.log(data);
        $window.alert("1 Record Deleted Suscces!");
        return $window.location.reload();
      });
    };
    $scope.absentCategories = [];
    leavesService.retrieveAbsentCategories().then(function(data) {
      $scope.absentCategories = data.data;
      console.log($scope.absentCategories);
    });
    $scope.cancelEdit = function() {
      $location.url('#/adminLeaves');
    };
  });

  app.controller('AbsentCategoriesCtrl', function($scope, leavesService, $filter, ngTableParams) {
    leavesService.retrieveAbsentCategories().then(function(data) {
      data = data.data;
      console.log(data);
      $scope.absentCategoriesTable = new ngTableParams({
        page: 1,
        count: 5,
        sorting: {
          categoryId: 'asc'
        }
      }, {
        total: data.length,
        getData: function($defer, params) {
          var filteredData, orderedData;
          filteredData = (params.filter() ? $filter("filter")(data, params.filter()) : data);
          orderedData = (params.sorting() ? $filter("orderBy")(filteredData, params.orderBy()) : data);
          params.total(orderedData.length);
          $defer.resolve(orderedData.slice((params.page() - 1) * params.count(), params.page() * params.count()));
        }
      });
    });
    $scope.createNew = function() {
      leavesService.createNewCategory($scope.category.code, $scope.category.name).then(function(data) {
        if (data.data.result) {
          return $window.location = '#/adminAbsentCategories';
        }
      });
      return;
      return $location.path('/adminLeaves');
    };
  });

}).call(this);

//# sourceMappingURL=manageLeaveCtrl.map
